---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import projects from "@/data/projects";

import { getLangFromUrl, useTranslations } from '../i18n/utils';

const langUrl = 'br';
const t = useTranslations(langUrl);

export function getStaticPaths () {
 return [
    {params: {lang: 'en',}},
    {params: {lang: 'br'}},
  ];
}

const { lang } = Astro.params;
const posts = await getCollection('posts', ({ id }) => {
  return id.startsWith(`${langUrl}/`);
});

---
 <Layout>
  <main class="flex flex-col gap-20">
    <article class="flex flex-col gap-8">
      <h1 class="text-3xl text-neutral-100">
        {t('presentation.title')}
      </h1>
      <h2
        class="max-w-[60ch] leading-6"
        set:html={convertAsteriskToStrongTag(t('presentation.description'))}
      />
      <SocialLinks />
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
        {t('blog.latest')}
        </h3>
        <Link href={`/${lang}/posts`} label={t('blog.all')} isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                  lang={lang}
                />
              ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          {t('projects.title')}
          ({projects.length})
        </h3>
      </header>
      {projects.length === 0 && <p>Oops, I must work^^^^^</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">{t('footer.title')}</h3>
      </header>
      <p>
        {t('footer.description')}
      </p>
      <SocialLinks />
    </article>
  </main>
</Layout>

